ready_oysters <- runif(200)
#indep_variable1 # to see the variable you created
farmers <- runif(200)
#indep_variable2 # to see the variable you created
weather <- rnorm(200,0,10)
#indep_variable3 # to see the variable you created
oysters_per_day <- as.integer((ready_oysters * 300) * (abs(10*farmers)) + 2 * weather + rnorm(200,0,10))
df <- data.frame(ready_oysters, farmers,weather,oysters_per_day)
## 75% of the sample size
smp_size <- floor(0.5 * nrow(df))
## set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(df)), size = smp_size)
train <- df[train_ind, ]
plot(train$ready_oysters, train$oysters_per_day)
plot(train$farmers, train$oysters_per_day)
plot(train$weather, train$oysters_per_day)
write.csv(train, file = "dv.csv", row.names = FALSE)
write.csv(train, file = "dv.csv", row.names = FALSE)
View(train)
write.csv(train, file = "dv.csv", row.names = FALSE)
write.csv(train,"Path to export the DataFrame\\File Name.csv", row.names = FALSE)
write.csv(Your DataFrame,"Path to export the DataFrame\\File Name.csv", row.names = FALSE)
write.csv(Your DataFrame,"Path to export the DataFrame\\File Name.csv", row.names = FALSE)
write.csv(train, file = "dv.csv", row.names = FALSE)
write.csv(train, file = "dv.csv", row.names = FALSE)
write.csv(train, file = "dv.csv", row.names = FALSE)
write.csv(train, file = "hello.csv", row.names = FALSE)
getwd()
getwd()
write.csv(train, file = "hello.csv", row.names = FALSE)
install.packages("devtools")
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
install_github("ahdvnd/swirlplus", force = TRUE)
install.packages("devtools")
install.packages("devtools", type = "win.binary")
install.packages("devtools")
library(devtools)
install.packages("rlang")
getwd()
library(brew)
library(devtools)
library(devtools)
install.packages("devtools")
install.packages("nlme", type = "source")
install.packages("devtools")
install.packages("textshaping")
install.packages("textshaping")
install.packages("devtools")
install.packages("ragg")
install.packages("ragg")
install.packages("ragg")
View(train)
install("devtools")
install.packages("devtools")
install.packages("pkgdown")
install.packages("ragg")
install.packages("devtools")
install.packages(c('Rcpp', 'RcppArmadillo'))
install_github("ahdvnd/swirlplus", force = TRUE)
install.packages("devtools")
install.packages("ragg")
install.packages("ragg")
install.packages("ragg")
install.packages("ragg")
install.packages("ragg")
install.packages(c("StanHeaders", "Stan"))
install.packages("RcppParallel")
install.packages("ragg")
install.packages("systemfonts", type = "source")
install.packages("ragg")
install.packages("devtools")
library(devtools)
install.packages(usethis)
install.packages("fs")
install.packages("Rcpp", dependencies = TRUE)
install.packages(usethis)
install.packages("usethis")
install.packages("usethis")
library(devtools)
install.packages("usethis")
install.packages("usethis")
install.packages("usethis")
library("usethis")
library(usethis)
library(devtools)
install_github("ahdvnd/swirlplus", force = TRUE)
library(swirl)
uninstall_all_courses()
install_course_github("ahdvnd", "cs112-swirl-courses")
install_course_github("ahdvnd", "cs112-swirl-courses")
swirl()
write.csv(df1, file = "dv.csv", row.names = FALSE)
write.csv(test_df, file = "dv.csv", row.names = FALSE)
write.csv(test_df, file = "dv.csv", row.names = FALSE)
write.csv(df1, file = "dv.csv", row.names = FALSE)
write.csv(train, file = "hello.csv", row.names = FALSE)
info()
write.csv(train, file = "hello.csv", row.names = FALSE)
write.csv(train, file = "hello.csv", row.names = FALSE)
write.csv(train, file = "hello.csv", row.names = FALSE)
write.csv(train, file = "hello.csv", row.names = FALSE)
write.csv(df1, file = "df.csv", row.names = FALSE)
df
write.csv(df, file = "df.csv", row.names = FALSE)
write.csv(df1, file = "df.csv", row.names = FALSE)
write.csv(df, file = "dv.csv", row.names = FALSE)
info()
skip()
write.csv(df1, file = "dv.csv", row.names = TRUE)
write.csv(df, file = "dv.csv", row.names = FALSE)
df1 <- df
write.csv(df1, file = "dv.csv", row.names = FALSE)
write.csv(df1, file = "df.csv", row.names = FALSE)
df1 <- data.frame()
write.csv(df1, file = "dv.csv", row.names = FALSE)
df1 <- df
info()
bye()
write.csv(train, file = "hello.csv", row.names = FALSE)
read.csv("https://drive.google.com/file/d/1dAF8iissjCtkjznfBH-0R1WaMrxPsyRB/view?usp=sharing")
read.csv("https://docs.google.com/spreadsheets/d/1oRPFXnmNgPNtJfOUZh7B2zb3clGFeecLDavmXvgk2lQ/edit?usp=sharing")
read.csv("https://docs.google.com/spreadsheets/d/1oRPFXnmNgPNtJfOUZh7B2zb3clGFeecLDavmXvgk2lQ/edit?usp=sharing")
library(swirl)
swirl()
head(lalonde_obs)
lm01 <- lm(re78~treat,data = lalonde_obs)
lm02 <- lm(re78~treat+age+educ,data = lalonde_obs)
lm03 <- lm(re78~ .-re75,data = lalonde_obs)
summary(lm01)
summary(lm02)
summary(lm03)
library(swirl)
swirl()
0
library(swirl)
swirl()
install.packages(pwr)
install.packages('pwr')
library(pwr)
prop.test(c(conv_A, conv_B), c(clicks_A, clicks_B)).
prop.test(c(600,400), c(30,40)).
prop.test(c(600,400), c(30,40))
prop.test(c(conv_A, conv_B), c(clicks_A, clicks_B))
prop.test(c(600, 400), c(30, 40))
prop.test(c(400,600), c(40,30))
prop.test(c(30, 40),c(600, 400), )
d
c
pwr.2p2n.test(h = 0.2, n1 = 1, sig.level = 0.05, power = 0.8)
pwr.2p2n.test(h = 0.2, n1 = 2, sig.level = 0.05, power = 0.8)
pwr.2p2n.test(h = 0.2, n1 = 3, sig.level = 0.05, power = 0.8)
pwr.2p2n.test(h = 0.2, n1 = 600, sig.level = 0.05, power = 0.8)
pwr.2p2n.test(h = 0.3, n1 = 600, sig.level = 0.05, power = 0.8)
install.packages("date")
install.packages("date", /Users/hugo/opt/anaconda3/envs/r-tutorial/lib/R/library)
install.packages("date", '/Users/hugo/opt/anaconda3/envs/r-tutorial/lib/R/library')
library(swirl)
swirl()
library(Matching)
head(lalonde_obs)
cbind(age,education,black,hispanic,married,nodegree,re74,re75)
cbind(age,education,black,hispanic,married,nodegree,re74,re75, data = lalonde_obs)
X <- cbind(lalonde_obs)
cbind(lalonde_obs$age,lalonde_obs$education,lalonde_obs$black,lalonde_obs$hispanic,lalonde_obs$married,lalonde_obs$nodegree,lalonde_obs$re74,lalonde_obs$re75, data = lalonde_obs)
X <- cbind(lalonde_obs$age,lalonde_obs$education,lalonde_obs$black,lalonde_obs$hispanic,lalonde_obs$married,lalonde_obs$nodegree,lalonde_obs$re74,lalonde_obs$re75)
Tr
Tr <- NA
Tr <- lalonde_obs$treat
rr1 <-
s
1
Match(Tr,X,M=1)
rr1<-Match(Tr,X,M=1)
X <- cbind(lalonde_obs$age,lalonde_obs$education,lalonde_obs$black,lalonde_obs$hispanic,lalonde_obs$married,lalonde_obs$nodegree,lalonde_obs$re74,lalonde_obs$re75)
rr1<-Match(Tr,X=X,M=1)
rr1<-Match(Tr=Tr,X=X,M=1)
MatchBalance(treat~age_education+black+hispanic+ married +
| nodegree + re74 + re75, data = lalonde_obs, match.out = rr1, nboots = 500)
MatchBalance(treat~age_education+black+hispanic+ married +
+
nodegree + re74 + re75, data = lalonde_obs, match.out = rr1, nboots = 500)
MatchBalance(treat~age+education+black+hispanic+ married +
+                  +
+                  nodegree + re74 + re75, data = lalonde_obs, match.out = rr1, nboots = 500)
mb1 <- MatchBalance(treat~ age + education +
| black + hispanic + married + nodegree + re74 + re75,
mb1 <- MatchBalance(treat~ age + education +
black + hispanic + married + nodegree + re74 + re75,
data = lalonde_obs, match.out=rr1, nboots=500)
rr1<-Match(Tr=Tr,X=X,M=3)
rr3<-Match(Tr=Tr,X=X,M=3)
mb3 <- MatchBalance(treat~ age + education +
black + hispanic + married + nodegree + re74 + re75,
data = lalonde_obs, match.out=rr3, nboots=500)
f
d
yes
mm1
rr1
genout <-
GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,
max.generations=10, wait.generations=5)
install.packages('regenoud')
genout <-
+     GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,
+                max.generations=10, wait.generations=5)
genout <-
+     GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,
+                max.generations=10, wait.generations=5)
genout <-
+     GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,
+                max.generations=10, wait.generations=5)
genout <-
+     GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,
+                max.generations=10, wait.generations=5)
genout <-
GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,                max.generations=10, wait.generations=5)
load(rgenoud)
library(regenoud)
library(rgenoud)
library('rgenoud')
install.packages(rgenoud)
install.packages('rgenoud')
genout <-
GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,                max.generations=10, wait.generations=5)
mout <- Match(Tr=Tr,X=X,M=1,estimand = 'ATT')
r
rr1
rr1
rr1
rr1
rr1
rr
1
rr1
rr
rr1
info()
rpt()
nxt()
nxt()
genout <-
GenMatch(Tr=Tr, X=X, estimand="ATT", M=1, pop.size=16,                max.generations=10, wait.generations=5)
mout <- genmatch(Tr,X,estimand="ATT",Weight.matrix = genour, M=1)
mout <- Genmatch(Tr,X,estimand="ATT",Weight.matrix = genout, M=1)
mout <- GenMatch(Tr,X,estimand="ATT",Weight.matrix = genout, M=1)
mout <- GenMatch(Tr=Tr,X=X,estimand="ATT",Weight.matrix = genout, M=1)
mout <- GenMatch(Tr=Tr,X=X, M=1,estimand="ATT",Weight.matrix = genout)
swirl()
library(swirl)
swirl()
nxt()
head(lalonde_obs)
lalonde_obs$educ_scaled = scale(X)[, 1]
scale(X)[, 1]
lalonde_obs$educ_scaled <- scale(X)[, 1]
lalonde_obs$educ_scaled <- c(scale(X)[, 1])
lalonde_obs$educ_scaled <- scale(lalonde_obs$educ)[, 1]
mean(lalonde_obs$educ_scaled)
sd(mean(lalonde_obs$educ_scaled))
sd(lalonde_obs$educ_scaled)
X <-c(age,educ_scaled)
X <-c(lalonde$age,lalonde$educ_scaled)
X <-c(lalond_obse$age,lalonde_obs$educ_scaled)
X <-c(lalond_obs$age,lalonde_obs$educ_scaled)
X <-c(lalonde_obs$age,lalonde_obs$educ_scaled)
X <- lalonde_obs$age + lalonde_obs$educ_scaled
j
X <-c(lalonde_obs$age,lalonde_obs$educ_scaled)
X <- paste(lalonde_obs$age,lalonde_obs$educ_scaled)
X <- lalonde_obs$age,lalonde_obs$educ_scaled
X <- cbind(lalonde_obs$age,lalonde_obs$educ_scaled)
Tr
Tr
Tr <- treat
Tr <- lalonde_obs$treat
genout1 <- GenMatch(Tr=Tr,rep())
Tr <- lalonde_obs$treat
Tr <- lalonde_obs$treat
?GenMatch
??GenMatch
genout1 <- GenMatch(Tr=Tr,X=X,repace = True, caliper = c(0.01,1000))
install.library("GenMatch")
install.packages("GenMatch")
genout1 <- GenMatch(Tr=Tr,X=X,repace = True, caliper = c(0.01,1000))
library(swirl)
swirl()
nxt()
nxt(0)
nxt()
nxt()
nxt()
swirl()
library(swirl)
swirl()
install.packages('quantreg')
library(quantreg)
load(engel)
load('engel')
load(engel)
library('engel')
data(engel)
})
rqfit_r50 <- rq(foodexp~income, tau = 0.5, data = engel)
summary(rqfit_r50)
rqfit_r75 <- rq(foodexp~income, tau = 0.75, data = engel)
summary(rqfit_r75)
rqfit_vec <- rq(formula = foodexp ~ income, tau = c(0.25, 0.50, 0.75), data = engel)
summary(rqfit_vec)
library(swirl)
swirl()
data(basque)
"foo"
"basque"
"treatment"
head(basque)
head(basque)
head(data(basque))
"regionname"
"basque"
"number"
"index"
"name"
"pred"
"target"
"Euro1"
data(basque)
install.packages("Synth")
library("Synth")
data("basque")
data(basque)
head(basque)
"gdpcap"
"year"
"regionno"
"regionname"
"invest"
library("basque")
basque
1969
?dataprep
synth.out <- synth(dataprep = basque, method = "BFGS")
ynth.out <- synth(dataprep = basque)
synth.out <- synth(dataprep = basque)
j
synth
synth.out <- synth(dataprep)
synth.out <- synth(dataprep.out)
synth.out$solution.w
gaps <-
dataprep.out$Y1plot -
(dataprep.out$Y0plot %*%
| synth.out$solution.w)
gaps <-
dataprep.out$Y1plot -
(dataprep.out$Y0plot %*%
synth.out$solution.w)
sum(gaps[16:43]).
sum(gaps[16:43])
install.packages('IRKernel')
install.packages('IRkernel'
install.packages('IRkernel')
install.packages('IRkernel')
library(swirl)
swirl()
data(rdrobust_RDsenate)
install.packages('rdrobust')
foo <- data(rdrobust_RDsenate)
data(rdrobust_RDsenate)
data(rdrobust_RDsenate)
data(rdrobust)
data(rdrobust_RDsenate)
foo <- rdrobust_RDsenate
rdrobust_RDsenate
install.packages(data(rdrobust_RDsenate))
install.packages(rdrobust_RDsenate)
install.packages(rdrobust_RDsenate)
install.packages(rdrobust)
install.packages('rdrobust_RDsenate')
install.packages('rdrobust')
data(rdrobust_RDsenate)
data(rdrobust_RDsenate)
library(rdrobust)
data(rdrobust_RDsenate)
foo <- rdrobust_RDsenate
summary(rdrobust(y=,x=, c=, h=10))
head(f00)
head(foo)
summary(rdrobust(y=vote,x=margin, c=0, h=10))
summary(rdrobust(y=foo$vote,x=foo$margin, c=0, h=10))
rdplot(y=foo$vote,x=foo$margin, binselect='es', h=10, x.label='Vote Share in Election at time t',y.label= 'Vote Share in Election at time t+1')
summaryrdbwselect(y=foo$vote,x=foo$margin, all=TRUE))
summaryrdbwselect(y=foo$vote,x=foo$margin, all=TRUE)
summary(rdbwselect(y=foo$vote,x=foo$margin, all=TRUE)
summary(rdbwselect(y=foo$vote,x=foo$margin, all=TRUE)
summary(rdbwselect(y=foo$vote,x=foo$margin, all=TRUE)
summary(rdbwselect(y=foo$vote,x=foo$margin, all=TRUE)
summary(rdbwselect(y=foo$vote,x=foo$margin, all=TRUE))
library(MatchIt)
install.packages('MatchIt')
install.packages("MatchIt")
library(MatchIt)
data <- read.csv("data.csv")
library(MatchIt)
data <- read.csv("seedsdata.csv")
library(MatchIt)
data <- read.csv("seedsdata.csv")
library(readxl)
seedsdata <- read_excel("code/nutrien/seedsdata.csv")
shiny::runApp('Desktop/health_disease')
runApp('Desktop/health_disease_1')
